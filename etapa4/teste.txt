int x = 10;
int y = 20;
int k = 666;
int v1[2]: 0 0;
bool b = FALSE;
bool vb[3]: TRUE TRUE TRUE;
long l1 = 5.5;
float f1 = 10;
byte s1 = 5.9;
byte s2 = 's';
bool vb1[3];
int v2[5]: 0 0 0 0 0;
long vl[3]: 0 1.5 'a';

int func(int x, int y){
x = 56;
y = 78+2+x+y+v1[0]+funcvazia();
b = ~b . vb[0] v funcbool();
y = 5 + (6 * x / funcvazia());
b = TRUE . FALSE v (~b . vb[1]);
x = (5 * (x + 1)) / (y - 3);
x = (x * (y + 4 / 8)) / (x*y);
b = TRUE . (5 < x) v (b v ~(y >= x));
vb[0] = ~FALSE . (x < 0);
b = TRUE != (~b . (TRUE v (x > 5)));
vb[0] = b != FALSE;
b = TRUE v (TRUE != b);
b = (FALSE v (x <= (5 * y))) . ((5 + (y / 2)) == (x * 5 - 4));
x = 5;
b = FALSE . (5 <= (x * y));
vb[x + 5] = TRUE;
v1[(x + (y * (5 / 2)))] = (x * (y + 4 / 8)) / (x*y);
x = v1[8];
x = func('a', 5.5);
x = func(func(k, 5), (x * (y + 4 / 8)) / (x*y));
b = (funcbool2(FALSE v TRUE, 5 + 8) v (x <= (5 * y))) . ((5 + (y / 2)) == (x * 5 - 4));
b = x==5 v y==3 . x < y;
while(TRUE){};
if(b == TRUE v vb[0] == FALSE) then {} else {};
for(x:5+'c', 10+'c', '1') {};
return x;
}

int funcaodois()
k=6.66

int funcvazia() {    }

int funccmdvaz() {  ; ;  ; }

bool funcbool(){}

bool funcbool2(bool b, int x){}
